#!/usr/bin/env python
import os, re, sys

types = {}
relationships = {}

for line in sys.stdin:
  if line.startswith("#"):
    continue

  line.rstrip()
  values = line.split("\t")
  assert len(values) == 9

  m = re.search("ID=([^;\n]+)", values[8])
  if m:
    featureid = m.group(1)
    types[featureid] = values[2]

  m = re.search("Parent=([^;\n]+)", values[8])
  if m:
    parent = m.group(1)
    parenttype = types[parent]
    assert parenttype
    if not values[2] in relationships:
      relationships[values[2]] = {}
    relationships[values[2]][parenttype] = 1

  if values[2] == "gene" and line.count("pseudo") > 0:
    print >> sys.stderr, "gene at %s[%s, %s] is probably a pseudogene" % (values[0], values[3], values[4])

print "\n===== Types ====="
featuretypes = list(set(types.values()))
featuretypes.sort()
for featuretype in featuretypes:
  print featuretype

print "\n===== Relationships (child --> parent) ====="
childtypes = list(relationships.keys())
childtypes.sort()
for childtype in childtypes:
  parenttypes = list(relationships[childtype].keys())
  parenttypes.sort()
  for parenttype in parenttypes:
    print "%s --> %s" % (childtype, parenttype)

