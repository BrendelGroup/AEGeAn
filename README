This directory contains the source code for the AEGeAn Toolkit.

Copyright (c) 2010-2013, Daniel S. Standage and CONTRIBUTORS.
See docs/LICENSE and docs/CONTRIBUTORS for details.

--------------------------------------------------------------------------------
AEGeAn: analysis and evaluation of genome annotations
--------------------------------------------------------------------------------
The AEGeAn toolkit started as several distinct but related efforts to build
tools for managing and analyzing whole-genome gene structure annotations. AEGeAn
has brought these efforts together into a single library that includes binaries
as well as several data structures and modules available via a C API. The AEGeAn
Toolkit leverages a variety of parsers, data structures, and graphics
capabilities available from the GenomeTools library (http://genometools.org).

    --------------------
    CanonGFF3
    --------------------
    CanonGFF3 is a tool for preprocessing GFF3 data. It validates features
    related to canonical protein-coding genes, accepting data encoded in a wide
    variety of common conventions.

    --------------------
    LocusPocus
    --------------------
    In the ParsEval paper cited below, a `gene locus' is defined as the smallest
    genomic region that contains all genes that overlap with any other genes in
    that region. This definition can be useful when comparing two sets of gene
    predictions. LocusPocus is a program for computing gene loci from one or
    more gene prediction sets.

    --------------------
    ParsEval
    --------------------
    ParsEval is a program for comparing distinct sets of gene structure
    annotations for the same sequence(s). This program calculates and reports a
    rich set of comparison statistics, both at the level of individual gene loci
    as well as at the level of entire sequences.

    Please cite ParsEval as follows.

    Standage, Daniel S. and Volker P. Brendel (2012) ParsEval: parallel
    comparison and analysis of gene structure annotations. BMC Bioinformatics,
    13:187, doi:10.1186/1471-2105-13-187.
    
    --------------------
    VAnG
    --------------------
    VAnG (Validation of Annotated Genomes) is a program for validating GFF3
    files against a schema.

Additional tools are under development and will be released once they are a bit
more stable.


--------------------------------------------------------------------------------
Installation instructions for the impatient
--------------------------------------------------------------------------------
If you have root access to a Linux system, chances are you can simply run the
commands below to install AEGeAn. I provide commands as would be run in the
Ubuntu distribution. Similar commands should be available for any other Linux
distribution. If you're not running Linux, or if you run into any problems
following these commands, you should probably take some time to read through the
rest of the installation instructions before proceeding.

  # Run as root
  sudo bash

  # System environment configuration (platform-dependent)
  # See `docs' directory for platform-specific configuration instructions
  echo $PATH | grep /usr/local/bin || (export PATH=/usr/local/bin:$PATH && /
       echo 'export PATH=/usr/local/bin:$PATH' >> /etc/bash.bashrc)
  test -d /usr/local/src || mkdir -p /usr/local/src
  grep '/usr/local/lib' /etc/ld.so.conf /etc/ld.so.conf.d/* || /
       (echo '/usr/local/lib' >> /etc/ld.so.conf/genometools-x86_64.conf /
        && ldconfig)
  apt-get install -y build-essential git libcairo2-dev libncurses5-dev

  # Install GenomeTools and AEGeAn (platform-independent)
  cd /usr/local/src
  git clone git://genometools.org/genometools.git
  cd genometools
  make 64bit=yes
  make install

  cd /usr/local/src
  git clone git://github.com/standage/AEGeAn.git
  cd AEGeAn
  make 64bit=yes
  make install

  # Test AEGeAn: print usage statement
  canon-gff3 -h
  parseval -h
  vang -h


--------------------------------------------------------------------------------
Prerequisites
--------------------------------------------------------------------------------
In principle, AEGeAn should compile and run on any POSIX-compliant UNIX system
(Linux, Mac OS X, Cygwin), although in practice, it has only been tested on
Linux and Mac systems. Native Windows support is not anticipated any time soon.
The AEGeAn developers have made an effort to minimize dependency on external
software, but compiling and installing does require a few prerequisites.

  * common UNIX tools for building software: specifically, GNU make (version
    3.80 or later) and a C compiler with OpenMP support (e.g. GCC 4.2 or higher)
  * GenomeTools library (see http://genometools.org/ for download and
    installation instructions)
  * the git version control system (http://git-scm.com)

While not a strict requirement, fully leveraging the graphics capabilities
provided by AEGeAn requires that the system also have an installation of the
Cairo graphics library (see the GenomeTools documentation).


--------------------------------------------------------------------------------
Compiling and installing
--------------------------------------------------------------------------------
It is generally assumed that the user will follow standard Linux/UNIX procedures
when downloading, compiling, and installing the GenomeTools prerequisite. The
default install directory is `/usr/local', which means that we assume the
GenomeTools source code has been placed in `/usr/local/src/', the binaries have
been installed in `/usr/local/bin', the shared libraries have been installed in
`/usr/local/lib', and so forth.

If this is the case, then the installation procedure described above should work
just fine. From the directory containing the AEGeAn source code distribution,
enter the following commands.

  make
  make install # requires root access

If you have some reason to install GenomeTools in some other directory (e.g.
if you don't have permissions to modify `/usr/local'), this should not be a
problem for AEGeAn. You must simply tell AEGeAn where to find GenomeTools.
For example, if you installed GenomeTools in `/home/alice/local', then you must
indicate this fact when compiling AEGeAn.

The following `make' options are available if you encounter any problems during
installation or if you want to customize your installation.

  - 64bit=yes        if you want compile for a 64-bit architecture
  - cairo=no         if your system does not have Cairo graphics libraries
                     installed (you will not be able to generate graphics)
  - GT_INSTALL_DIR=? if you did not install GenomeTools in `/usr/local'
  - prefix=?         to install AEGeAn in a directory other than
                     `/usr/local' (e.g. if you do not have admin privileges)

For example, if I need to install GenomeTools and AEGeAn in my home directory
(`/home/alice'), then I could do something like this.

  test -d /home/alice/local/src || mkdir -p /home/alice/local/src

  cd /home/alice/local/src
  git clone git://genometools.org/genometools.git
  cd genometools
  make prefix=/home/alice/local 64bit=yes
  make prefix=/home/alice/local 64bit=yes install

  cd /home/alice/local/src
  git clone https://github.com/standage/AEGeAn.git
  cd AEGeAn
  make prefix=/home/alice/local GT_INSTALL_DIR=/home/alice/local
  make prefix=/home/alice/local GT_INSTALL_DIR=/home/alice/local install

Remember that if you install the GenomeTools library in a non-standard location,
you will need to make sure that the ParsEval program can find that library at
runtime. This can be done on a temporary basis using the `LD_LIBRARY_PATH'
environmental variable or on a permanent system-wide basis using the `ldconfig'
command.

Although the `/usr/local' directory is the standard install location for 3rd
party libraries, on some distributions this directory is not pre-configured.
If you use the default install locations and still run into problems, make sure
that `/usr/local/bin' is in your path (using the `export' or `setenv' commands)
and that `/usr/local/lib' is in the LD path (using the `ldconfig' command).


--------------------------------------------------------------------------------
Running CanonGFF3
--------------------------------------------------------------------------------
Invoking `canon-gff3 -h' will print a helpful usage statement ot the terminal. 
For a more detailed description and use cases, please refer to the documentation
in the `doc' directory.


--------------------------------------------------------------------------------
Running LocusPocus
--------------------------------------------------------------------------------
Invoking `locuspocus -h' will print a helpful usage statement ot the terminal. 
For a more detailed description and use cases, please refer to the documentation
in the `doc' directory.


--------------------------------------------------------------------------------
Running ParsEval
--------------------------------------------------------------------------------
Invoking `parseval -h' will print a helpful usage statement to the terminal.
For a more detailed description and use cases, please refer to the documentation
in the `doc' directory.


--------------------------------------------------------------------------------
Running VAnG
--------------------------------------------------------------------------------
At this point, the `vang' program does little more than a basic test of the
parsers and data structures. More documentation and a helpful usage statement
will be forthcoming.


--------------------------------------------------------------------------------
Contact
--------------------------------------------------------------------------------
If you have any questions regarding AEGeAn, feel free to contact the author
by email (daniel.standage@gmail.com).
